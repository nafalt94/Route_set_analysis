drop table all_od_pairs_test
select * into all_od_pairs_test from all_od_pairs limit 50000;
ALTER TABLE all_od_pairs_test ADD PRIMARY KEY (origin,destination);
CREATE INDEX idx_od ON all_od_pairs_test (origin,destination);

select * from all_od_pairs_test limit 10

drop table remote_results_test
CREATE TABLE IF NOT EXISTS remote_results_test(did INT, start_zone INT, end_zone INT, lid BIGINT, node BIGINT, 
               geom geometry,cost double precision,link_cost DOUBLE PRECISION, start_node BIGINT, end_node BIGINT,path_seq INT,agg_cost DOUBLE PRECISION, 
               speed numeric, fcn_class BIGINT, PRIMARY KEY (start_zone, end_zone,did, path_seq))
			   	   
select count(*) from remote_results_test limit 10


	SELECT status,
	   100.0 * COUNT(*)        
	   / SUM(COUNT(*)) OVER () 
	   As "Percentage"
	FROM all_od_pairs_test
	GROUP BY status

a2 lap
a2 desk

/För att nollställa insert_table
UPDATE insert_status SET fetch_time = null, insert_time = null;

select * from insert_status

#För att ladda in i remote results
select * into remote_results from remote_results_test
CREATE INDEX lid_idx ON remote_results (lid);
CREATE INDEX start_end_idx ON remote_results (start_zone, end_zone);
CREATE INDEX geom_idx ON remote_results (geom);
CREATE INDEX did_idx ON remote_results (did);
CREATE INDEX start_idx ON remote_results (start_zone);
CREATE INDEX end_idx ON remote_results (end_zone);


#Tolka 20% som inte får resultat:
select origin,assigned_to, count(*) as cnt,geom from all_od_pairs_order
	inner join emme_zones ON all_od_pairs_order.origin = emme_zones.id  where all_od_pairs_order.status = 3 
	group by origin, assigned_to,geom

#Nollställa emme_results
UPDATE emme_results SET nr_all_routes_affected = 0, mean_deterioration = 0, nr_affected = 0


#Avgerage antal rutter
select avg(max_did)
from (select start_zone,end_zone, max(did) AS max_did
      from partitioned_results_no_ferries
      group by start_zone,end_zone limit 10000) As maxSalary;
