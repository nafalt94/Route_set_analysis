#Skapa cost_table
select ST_Length(geom)/speed AS link_cost, * into cost_table from model_graph

#SKapa heatmap
drop table if exists point_table
select (ST_DumpPoints(l.geom)).geom into point_table from all_results as l where did = 1
select * from point_table

#Skapa tabell mellan alla OD-par
SELECT 
    a.id as id_ori, 
    b.id as id_dest,
    ST_MakeLine(ST_Centroid(a.geom), ST_Centroid(b.geom)) as geom_line,
	ST_Centroid(a.geom) as geom_ori,
	ST_Centroid(b.geom) as geom_dest
 FROM emme_zones a, emme_zones b
 WHERE a.id < b.id;
 
 # För att plocka ut "representativa" (eller inte) rutter från klustringstabell (QGIS)
 WITH summary AS (
    SELECT p.id, 
           p.geom, 
           p.cluster_id, 
           ROW_NUMBER() OVER(PARTITION BY p.cluster_id) 
		AS rk
      FROM od_cluster p)
SELECT s.*
  FROM summary s
 WHERE s.rk = 1

#För att göra om geom (text) till geometri
ALTER TABLE cluster_result ALTER COLUMN geom TYPE Geometry USING geom::Geometry;

 # För att plocka ut "representativa" (eller inte) rutter från klustringstabell (R)
WITH summary AS (
    SELECT p.id_ori,
			p.id_dest,
           p.geom, 
           p.result$cluster, 
           ROW_NUMBER() OVER(PARTITION BY p.result$cluster) 
		AS rk
      FROM cluster_result p)
SELECT s.*
  FROM summary s
 WHERE s.rk = 1
 
 ## Ta ut alla rutter som går igenom en viss länk:
 select * from all_results f
where  exists (
    select 1 from all_results l where lid = 83025 and (f.start_zone = l.start_zone 
									and f.end_zone = l.end_zone and f.did = l.did))
									
									
# För att sätta alla OD-par till -1 dvs ej behandlade
WITH cte AS (
   select * from all_od_pairs   
   where EXTRACT(EPOCH FROM (NOW() - time_updated)) > 1 or time_updated IS NULL
   )
UPDATE all_od_pairs a
SET    status = -1, time_updated = NOW()
FROM   cte
WHERE  cte.id = a.id;
